% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/st_radius_of_curvature.R
\name{st_radius_of_curvature}
\alias{st_radius_of_curvature}
\title{Calculate Radius of Curvature for Spatial Data}
\usage{
st_radius_of_curvature(data, n = 5, radial_limit = 20000)
}
\arguments{
\item{data}{A data frame or tibble containing at least two columns: \code{lat} (latitude) and \code{lon} (longitude).}

\item{n}{Integer. The number of points to lag and lead when calculating the radius of curvature. Default is 5.}

\item{radial_limit}{Numeric. The maximum allowable radius of curvature. Any radius exceeding this value will be capped. Default is 20000.}
}
\value{
A data frame with additional columns:
  \describe{
    \item{\code{lat1, lon1}}{The lagged latitude and longitude values.}
    \item{\code{lat3, lon3}}{The lead latitude and longitude values.}
    \item{\code{d12, d23, d31}}{Distances between lag, middle, and lead points.}
    \item{\code{s}}{The semi-perimeter of the triangle formed by the three points.}
    \item{\code{area}}{The area of the triangle formed by the three points.}
    \item{\code{radius}}{The radius of curvature, capped at \code{radial_limit}.}
    \item{\code{curvature}}{The curvature, calculated as the reciprocal of the radius of curvature.}
  }
}
\description{
This function calculates the radius of curvature and curvature for spatial data points using a sliding window of lagged and lead points. It is designed to work with data that includes latitude and longitude coordinates and requires the data to be in a projected CRS, such as EPSG:32610.
}
\details{
The function works as follows:
1. Calculates lagged and lead points based on the input \code{n}.
2. Computes the distances between the three points: lag, current, and lead.
3. Calculates the semi-perimeter and area of the triangle formed by these points.
4. Determines the radius of curvature as \( R = \frac{d12 \cdot d23 \cdot d31}{4 \cdot \text{area}} \).
5. Caps the radius of curvature at \code{radial_limit} to avoid extreme values.
6. Computes curvature as the reciprocal of the radius of curvature. For degenerate triangles (area = 0), curvature is set to 0.
}
\note{
This function assumes the input data is in a projected CRS (e.g., EPSG:32610). If using a geographic CRS (e.g., latitude/longitude), distances will not be accurate, and the function may yield incorrect results.
}
\examples{
\dontrun{
# Example usage
result <- st_radius_of_curvature(data = my_data, n = 5, radial_limit = 20000)
}
}
